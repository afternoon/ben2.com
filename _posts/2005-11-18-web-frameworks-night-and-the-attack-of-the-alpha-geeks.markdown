---
layout: post
title: Web Frameworks Night and the attack of the alpha geeks
date: '2005-11-18T03:40:39+00:00'
tags: []
tumblr_url: https://aftnn.org/post/47880475563/web-frameworks-night-and-the-attack-of-the-alpha-geeks
---
<p>Went to the <a href="http://blog.unixdaemon.net/cgi-bin/blosxom.pl/events/frameworks_night_short.html">Web Frameworks Night</a> tonight to learn a bit more about some of the most interesting framework projects. As creator and sole hacker on InfoCMS and as somebody who realises how silly it is to reinvent the wheel, I thought I owed it to myself (and my clients) to show up and learn some stuff.</p>

<p>The three frameworks presented where <a href="http://catalyst.perl.org/">Catalyst</a>, <a href="http://www.djangoproject.com/">Django</a> and the now quite famous <a href="http://www.rubyonrails.org/">Ruby On Rails</a>. Each was interesting, I arrived late for the Catalyst talk and was least interested in it due to it&rsquo;s Perliness. Django was what I really wanted to learn about, but it was also interesting to listen to Matt Biddulph discussing Rails development. We also got to see inside the in-development BBC programme catalogue app, which knows all about pretty much every show the BBC has done since 1936. That alone was worth the bike-ride.</p>

<p>As I said it was Django that I wanted to know more about. Django is Python, full stack, has a nice OR-mapper and lots of bits of pieces that I have or have tried to build into InfoCMS. It doesn&rsquo;t have Rails or Zope 3&rsquo;s test-driven development, which is a big blow. It doesn&rsquo;t have XSLT as an output layer or much in the way of TTW tools for building sites as far as I could see. Test-driven development is something which I&rsquo;ve totally failed to bring into InfoCMS, but the other two are core goals. However, though Django may lack some core things I want from InfoCMS, it does seem to have a very similar set of goals. Minimal code, maximal reuse. High level of component sharing and nice things like automatically generated admin interfaces, Ajax, etc.</p>

<p>They&rsquo;ve all got bloody template languages though! Gah.</p>

<p>Anyway, I&rsquo;ve been thinking I&rsquo;d like to rebuild InfoCMS from the ground up in Python for a while. It&rsquo;s a pipe-dream because I&rsquo;ll never get the time, what with running two start-ups and that. However, I could steal a third or half of the code I need from Django :-). Both the website and Simon stressed it&rsquo;s modular nature. Don&rsquo;t like the view layer, throw it out. Simon also said that they&rsquo;re not afraid of breaking backwards compatibility and that as they&rsquo;ve only been open source since July, now is a good time to get involved and potentially shape the project dramatically. I might just do that.</p>

<p>The after party pub mission was also really interesting. I got talking to <a href="http://www.ludicorp.com/team_member.php?id=7">this guy</a>, an alumnus of Media Lab, Berkeley and Ludicorp! Every cool idea I threw at him he bounced back without even trying. He referred to <a href="http://www.ludicorp.com/team_member.php?id=15">Cal</a> and <a href="http://tim.oreilly.com/">Tim</a> by first name. He&rsquo;s consulting at Sony on generative stuff and toys for Playstation etc. I talked about Generator X and the generative art scene, he knows <a href="http://www.groupc.net/">Casey Raes</a>. He mentioned mixing and mash-up tools on Playstation, I counter with Ableton Live, Sony are working with them. I mentioned an interesting new book, <em><a href="http://mitpress.mit.edu/catalog/item/default.asp?tid=9802&amp;ttype=2">Rules of Play</a></em>, it was written by his old business partner. It was a funny conversation. Mainly because he was a really nice and down to earth guy, at the same time as being a name geek, just back from <a href="http://conferences.oreillynet.com/eurooscon/">OSCON</a>. It was pretty exciting to be honest.</p>
